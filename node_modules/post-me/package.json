{
  "_args": [
    [
      "post-me@0.4.5",
      "/Users/kamilmolendys/Dev/deploy-to-skynet-action"
    ]
  ],
  "_from": "post-me@0.4.5",
  "_id": "post-me@0.4.5",
  "_inBundle": false,
  "_integrity": "sha512-XgPdktF/2M5jglgVDULr9NUb/QNv3bY3g6RG22iTb5MIMtB07/5FJB5fbVmu5Eaopowc6uZx7K3e7x1shPwnXw==",
  "_location": "/post-me",
  "_phantomChildren": {},
  "_requested": {
    "type": "version",
    "registry": true,
    "raw": "post-me@0.4.5",
    "name": "post-me",
    "escapedName": "post-me",
    "rawSpec": "0.4.5",
    "saveSpec": null,
    "fetchSpec": "0.4.5"
  },
  "_requiredBy": [
    "/skynet-js",
    "/skynet-mysky-utils"
  ],
  "_resolved": "https://registry.npmjs.org/post-me/-/post-me-0.4.5.tgz",
  "_spec": "0.4.5",
  "_where": "/Users/kamilmolendys/Dev/deploy-to-skynet-action",
  "author": {
    "name": "Alessandro Genova",
    "email": "ales.genova@gmail.com",
    "url": "https://github.com/alesgenova"
  },
  "bugs": {
    "url": "https://github.com/alesgenova/post-me/issues",
    "email": "ales.genova@gmail.com"
  },
  "description": "Use web Workers and other Windows through a simple Promise API",
  "devDependencies": {
    "@babel/core": "^7.11.6",
    "@babel/preset-env": "^7.12.11",
    "@microsoft/api-extractor": "^7.13.0",
    "@rollup/plugin-babel": "^5.2.2",
    "@rollup/plugin-typescript": "^8.1.0",
    "@types/jest": "^26.0.15",
    "@types/jsdom": "^16.2.5",
    "gh-pages": "^3.1.0",
    "husky": "^4.3.0",
    "jest": "^26.6.3",
    "jsdom": "^16.4.0",
    "prettier": "^2.2.1",
    "pretty-quick": "^3.1.0",
    "rollup": "^2.35.1",
    "ts-jest": "^26.4.4",
    "tslib": "^2.0.3",
    "typescript": "^4.1.3"
  },
  "exports": {
    "import": "./dist/index.esnext.mjs",
    "require": "./dist/index.js"
  },
  "files": [
    "dist"
  ],
  "homepage": "https://github.com/alesgenova/post-me",
  "husky": {
    "hooks": {
      "pre-commit": "npm run prettier:write-staged"
    }
  },
  "keywords": [
    "communication",
    "postmessage",
    "iframe",
    "worker",
    "workers",
    "web-worker",
    "web-workers",
    "concurrency",
    "parallel-computing",
    "front-end",
    "back-end",
    "promise",
    "typescript",
    "postmate"
  ],
  "license": "MIT",
  "main": "./dist/index.js",
  "module": "./dist/index.mjs",
  "name": "post-me",
  "publishConfig": {
    "access": "public"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/alesgenova/post-me.git",
    "directory": "packages/core"
  },
  "scripts": {
    "build": "npm run build:src && npm run build:types",
    "build:demo": "npm run build:src && node demo/build.js www",
    "build:docs": "npm run build:types && api-extractor run --local --verbose",
    "build:src": "rollup -c",
    "build:types": "tsc --emitDeclarationOnly",
    "demo": "npm run build:demo && npx serve www",
    "deploy:demo": "npm run build:demo && gh-pages -d www",
    "prepublishOnly": "npm run build",
    "prettier:check-all": "prettier --check '**/*.{js,jsx,ts,tsx,css,html}'",
    "prettier:check-modified": "pretty-quick --check --pattern '**/*.{js,jsx,ts,tsx,css,html}'",
    "prettier:check-staged": "pretty-quick --staged --check --pattern '**/*.{js,jsx,ts,tsx,css,html}'",
    "prettier:write-all": "prettier --write '**/*.{js,jsx,ts,tsx,css,html}'",
    "prettier:write-modified": "pretty-quick --write --pattern '**/*.{js,jsx,ts,tsx,css,html}'",
    "prettier:write-staged": "pretty-quick --staged --write --pattern '**/*.{js,jsx,ts,tsx,css,html}'",
    "test": "jest --coverage tests"
  },
  "sideEffects": false,
  "types": "./dist/index.d.ts",
  "version": "0.4.5"
}
